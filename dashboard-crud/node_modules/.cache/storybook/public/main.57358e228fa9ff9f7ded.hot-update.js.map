{"version":3,"file":"main.57358e228fa9ff9f7ded.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AASA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxBA;;AA4BA;AAAA;AAAA;;AAAA;AAEA;AAIA;;AAEA;AACA;AAAA;AAAA;AAEA;;AAHA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAIA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://dashboard-crud/./components/atoms/Box/index.tsx","webpack://dashboard-crud/./components/atoms/Box/index.stories.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface BoxProps {\r\n  children?: React.ReactNode;\r\n  width?: string;\r\n  height?: string;\r\n  backgroundColor?: string;\r\n}\r\n\r\nconst StyledFlexBox = styled.div<BoxProps>`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"100px\"};\r\n  background-color: ${(props) => props.backgroundColor || \"#000\"};\r\n`;\r\n\r\nexport default function Box({ children, ...rest }: BoxProps): JSX.Element {\r\n  return <StyledFlexBox {...rest}>{children}</StyledFlexBox>;\r\n}\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\r\\n\\r\\nimport Box from \\\"./\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\r\\nexport default {\\r\\n  title: \\\"Atoms/Box\\\",\\r\\n  component: Box,\\r\\n  parameters: {\\r\\n    // More on Story layout: https://storybook.js.org/docs/react/configure/story-layout\\r\\n    layout: \\\"fullscreen\\\",\\r\\n  },\\r\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\r\\n  // argTypes: {\\r\\n  //   backgroundColor: { control: \\\"color\\\" },\\r\\n  // },\\r\\n  // argTypes: {\\r\\n  // label: {\\r\\n  //   description: \\\"overwritten description\\\",\\r\\n  //   table: {\\r\\n  //     type: {\\r\\n  //       summary: \\\"something short\\\",\\r\\n  //       detail: \\\"something really really long\\\",\\r\\n  //     },\\r\\n  //   },\\r\\n  //   control: {\\r\\n  //     type: \\\"text\\\",\\r\\n  //   },\\r\\n  // },\\r\\n  // },\\r\\n} as ComponentMeta<typeof Box>;\\r\\n\\r\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\r\\nconst Template: ComponentStory<typeof Box> = (args) => <Box {...args} />;\\r\\n\\r\\nconst StyledText = styled.span`\\r\\n  color: #fff;\\r\\n`;\\r\\n\\r\\nexport const Center = Template.bind({});\\r\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\r\\nCenter.args = {\\r\\n  children: <StyledText>중앙 정렬</StyledText>,\\r\\n  // primary: true,\\r\\n  // label: \\\"ButtonPrimary\\\",\\r\\n};\\r\\n\\r\\n// Primary.storyName = \\\"I am the primary\\\";\\r\\n// export const Secondary = Template.bind({});\\r\\n// Secondary.args = {\\r\\n//   label: \\\"ButtonSecondary\\\",\\r\\n// };\\r\\n\\r\\n// export const Large = Template.bind({});\\r\\n// Large.args = {\\r\\n//   size: \\\"large\\\",\\r\\n//   label: \\\"ButtonLarge\\\",\\r\\n// };\\r\\n\\r\\n// export const Small = Template.bind({});\\r\\n// Small.args = {\\r\\n//   size: \\\"small\\\",\\r\\n//   label: \\\"ButtonSmall\\\",\\r\\n// };\\r\\n\\r\\n// export const Temp = Template.bind({});\\r\\n// Temp.args = {\\r\\n//   label: \\\"ButtonTemp\\\",\\r\\n// };\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Center\":{\"startLoc\":{\"col\":45,\"line\":36},\"endLoc\":{\"col\":72,\"line\":36},\"startBody\":{\"col\":45,\"line\":36},\"endBody\":{\"col\":72,\"line\":36}}};\n    \nimport React from \"react\";\r\nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\r\n\r\nimport Box from \"./\";\r\nimport styled from \"styled-components\";\r\n\r\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\r\nexport default {\r\n  title: \"Atoms/Box\",\r\n  component: Box,\r\n  parameters: {\r\n    // More on Story layout: https://storybook.js.org/docs/react/configure/story-layout\r\n    layout: \"fullscreen\",\r\n  },\r\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\r\n  // argTypes: {\r\n  //   backgroundColor: { control: \"color\" },\r\n  // },\r\n  // argTypes: {\r\n  // label: {\r\n  //   description: \"overwritten description\",\r\n  //   table: {\r\n  //     type: {\r\n  //       summary: \"something short\",\r\n  //       detail: \"something really really long\",\r\n  //     },\r\n  //   },\r\n  //   control: {\r\n  //     type: \"text\",\r\n  //   },\r\n  // },\r\n  // },\r\n} as ComponentMeta<typeof Box>;\r\n\r\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\r\nconst Template: ComponentStory<typeof Box> = (args) => <Box {...args} />;\r\n\r\nconst StyledText = styled.span`\r\n  color: #fff;\r\n`;\r\n\r\nexport const Center = Template.bind({});\r\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\r\nCenter.args = {\r\n  children: <StyledText>중앙 정렬</StyledText>,\r\n  // primary: true,\r\n  // label: \"ButtonPrimary\",\r\n};\r\n\r\n// Primary.storyName = \"I am the primary\";\r\n// export const Secondary = Template.bind({});\r\n// Secondary.args = {\r\n//   label: \"ButtonSecondary\",\r\n// };\r\n\r\n// export const Large = Template.bind({});\r\n// Large.args = {\r\n//   size: \"large\",\r\n//   label: \"ButtonLarge\",\r\n// };\r\n\r\n// export const Small = Template.bind({});\r\n// Small.args = {\r\n//   size: \"small\",\r\n//   label: \"ButtonSmall\",\r\n// };\r\n\r\n// export const Temp = Template.bind({});\r\n// Temp.args = {\r\n//   label: \"ButtonTemp\",\r\n// };\r\n\n\n\nCenter.parameters = { storySource: { source: \"(args) => <Box {...args} />\" }, ...Center.parameters };"],"names":[],"sourceRoot":""}